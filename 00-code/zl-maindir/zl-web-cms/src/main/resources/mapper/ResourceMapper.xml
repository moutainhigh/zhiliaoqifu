<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://10.20.91.130/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.ebeijia.zl.web.cms.system.mapper.ResourceMapper">

	<sql id="ResourceColumns">
		 id,
		 description, 
		 icon, 
		 resource_name,
		 resource_type,
		 login_type,
		 resource_key,
		 seq,
		 url,
		 pid,
		 data_stat,
		 remarks,
		 create_user,
		 update_user,
		 create_time,
		 update_time,
		 lock_version	
	</sql>
	
	<select id="getList" parameterType="Resource" resultType="Resource">
		select 
	  		<include refid="ResourceColumns" />
		from tb_web_resource
	    where login_type='2'
		<if test="resourceName != null and resourceName != '' ">
			and resource_name like '%' || #{resourceName} || '%'
		</if>
		<if test="url != null and url != '' ">
			and url like '%' || #{url} || '%'
		</if>
		order by id asc
	</select>
	
	<select id="getList1" resultType="Resource">
		select 
	  		<include refid="ResourceColumns" />
		from tb_web_resource where login_type='2'
		order by id asc
	</select>
	
	<select id="selectByPrimaryKey" parameterType="String" resultType="Resource">
		select
			<include refid="ResourceColumns" />
		from tb_web_resource 
		where id=#{primaryKey}
	</select>
	
	<insert id="insert" parameterType="Resource">
		insert into tb_web_resource (
			id,
		 	description, 
		 	icon, 
		 	resource_name,
		 	resource_type,
		 	login_type,
		 	resource_key,
		 	seq,
		 	url,
		 	pid,
		 	data_stat,
		 	remarks,
		 	create_user,
		 	update_user,
		 	create_time,
		 	update_time,
		 	lock_version
		 )  VALUES (
		 	#{id},
			#{description,jdbcType=VARCHAR},
			#{icon,jdbcType=VARCHAR},
			#{resourceName,jdbcType=INTEGER},
			#{resourceType,jdbcType=INTEGER},
			#{loginType,jdbcType=INTEGER},
			#{resourceKey,jdbcType=INTEGER},
			#{seq,jdbcType=INTEGER},
			#{url,jdbcType=VARCHAR},
			#{pid,jdbcType=VARCHAR},
			'0',
			#{remarks,jdbcType=VARCHAR},
			#{createUser,jdbcType=VARCHAR},
			#{updateUser,jdbcType=VARCHAR},
			#{createTime,jdbcType=BIGINT},
		 	#{updateTime,jdbcType=BIGINT},
			0
		)
	</insert>

	<update id="updateByPrimaryKey" parameterType="Resource">
		update tb_web_resource
		<trim prefix="SET" suffixOverrides=",">
			description=#{description,jdbcType=VARCHAR},
			resource_name=#{resourceName,jdbcType=VARCHAR},
			resource_type=#{resourceType,jdbcType=INTEGER},
			url=#{url,jdbcType=VARCHAR},
			resource_key=#{resourceKey,jdbcType=VARCHAR},
			update_user=#{updateUser,jdbcType=VARCHAR},
			update_time=#{updateTime,jdbcType=BIGINT}
		</trim>
		where id = #{id}
	</update>

	<delete id="deleteByPrimaryKey" parameterType="string">
		delete from tb_web_resource where id = #{id}
	</delete>

	<!-- 根据roleId获取该用户的权限 -->
	<select id="getRoleResourceByRoleId" parameterType="String" resultType="Resource">
		select
			<include refid="ResourceColumns" />
		from tb_web_resource where data_stat='0' and id in(
		select resource_id 
		from tb_web_role_resource 
		where role_id = #{roleId})
	</select>

	<select id="getResourceTypeList" parameterType="String" resultType="Resource">
		select
			distinct id,
			description, 
		 	icon, 
		 	resource_name,
		 	resource_type,
		 	login_type,
		 	resource_key,
		 	seq,
		 	url,
		 	pid,
		 	data_stat,
		 	remarks,
		 	create_user,
		 	update_user,
		 	create_time,
		 	update_time,
		 	lock_version
		from tb_web_resource
		where resource_type = #{resourceType} and login_type='2'
		order by seq
	</select>
	
</mapper>
